version: '3.8'

services:
  discovery:
    build: ../Discovery
    container_name: discovery
    ports:
      - '8761:8761'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 40s


  gateway:
    build: ../Gateway
    container_name: gatewayy
    ports:
      - '8887:8887'
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8761/eureka
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak-w:8080/realms/Evaluation
      - spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak-w:8080/realms/Evaluation/protocol/openid-connect/certs
    depends_on:
      discovery:
        condition: service_healthy



  badge:
    build: ../Micro-Service-Badge
    container_name: badge
    ports:
      - '8080:8080'
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8761/eureka
      - spring.datasource.url=jdbc:mysql://mysql-service:3306/Badge?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.hibernate.ddl-auto=update

    depends_on:
      discovery:
        condition: service_healthy



  quiz:
    build: ../Micro-service-QCM
    container_name: quizz
    ports:
      - '8095:8095'
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8761/eureka
      - spring.datasource.url=jdbc:mysql://mysql-service:3306/quiz?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.hibernate.ddl-auto=update
    depends_on:
      discovery:
        condition: service_healthy


  user:
    build: ../Micro-service-User
    container_name: user
    ports:
      - '9094:9094'
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8761/eureka
      - spring.datasource.url=jdbc:mysql://mysql-service:3306/user?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.hibernate.ddl-auto=update
      - keycloak.realm=Evaluation
      - keycloak.domain=keycloak-w:8080
      - keycloak.adminClientId=admin-cli
      - keycloak.adminClientSecret=qu49USnFCthr7KMX3a49QLsl3XfFHJri
      - keycloak.client=authenticationClientId
      - keycloak.urls.auth=http://keycloak-w:8080
    depends_on:
      discovery:
        condition: service_healthy



  mysql-kc:
    image: mysql:8.0.27
    ports:
      - 3377:3306
    restart: unless-stopped
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: keycloak_db
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - keycloak-and-mysql-volume:/var/lib/mysql

  mysql-service:
    image: mysql:8.0.27
    ports:
      - 3379:3306
    restart: unless-stopped
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: Quiz
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - Quiz-and-mysql-volume:/var/lib/mysql

  keycloak-w:
    image: quay.io/keycloak/keycloak:23.0.7
    command: start-dev
    ports:
      - 8081:8080
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      KC_DB_URL: jdbc:mysql://mysql-kc:3306/keycloak_db
      KC_FEATURES: token-exchange,admin-fine-grained-authz
      KC_HOSTNAME: localhost
    depends_on:
      - mysql-kc
  angular-app:
    build: ../Evaluation-Front
    container_name: angular-ap
    ports:
      - '4200:4200'
    volumes:
      - ./:/angular-ap
    environment:
      - STYLE=css

networks:
  default:
    name: shared-network


volumes:
  keycloak-and-mysql-volume:
    external: true
  Quiz-and-mysql-volume:
    external: true
